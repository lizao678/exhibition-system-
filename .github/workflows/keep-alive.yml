name: Keep Repository Active

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次，更频繁
    - cron: '30 8 * * *'    # 每天上午8:30额外运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 执行多重保活操作
        run: |
          echo "开始执行多重保活操作..."
          BASE_URL="https://${{ secrets.VERCEL_URL }}"

          # 1. 调用主页面（模拟用户访问）
          echo "1. 访问主页面..."
          curl -s -o /dev/null -w "主页访问状态: %{http_code}, 响应时间: %{time_total}s\n" "$BASE_URL/"

          # 2. 调用健康检查API
          echo "2. 执行健康检查..."
          HEALTH_RESPONSE=$(curl -s -w "\nHTTP_STATUS: %{http_code}" "$BASE_URL/api/health-check")
          HEALTH_STATUS=$(echo "$HEALTH_RESPONSE" | grep "HTTP_STATUS:" | cut -d' ' -f2)
          echo "健康检查状态: $HEALTH_STATUS"

          # 3. 调用 Keep Alive API
          echo "3. 执行数据库保活..."
          API_URL="$BASE_URL/api/keep-alive?key=${{ secrets.KEEP_ALIVE_KEY }}"
          RESPONSE=$(curl -s -w "\nHTTP_STATUS: %{http_code}" "$API_URL")
          HTTP_STATUS=$(echo "$RESPONSE" | grep "HTTP_STATUS:" | cut -d' ' -f2)
          echo "保活API状态: $HTTP_STATUS"

          # 4. 访问登录页面（模拟管理员检查）
          echo "4. 访问管理页面..."
          curl -s -o /dev/null -w "登录页访问状态: %{http_code}\n" "$BASE_URL/login"

          # 5. 访问信息页面（模拟用户查看）
          echo "5. 访问信息页面..."
          curl -s -o /dev/null -w "信息页访问状态: %{http_code}\n" "$BASE_URL/info?id=1"

          # 检查关键API是否成功
          if [ "$HTTP_STATUS" = "200" ] && [ "$HEALTH_STATUS" = "200" ]; then
            echo "✅ 所有保活操作执行成功！"
          else
            echo "❌ 部分保活操作失败"
            echo "详细响应: $RESPONSE"
          fi

      - name: 更新数据库活跃时间
        run: |
          # 获取当前时间
          CURRENT_TIME=$(date '+%Y-%m-%d %H:%M')
          echo "当前时间: $CURRENT_TIME"

          # 更新 README.md 中的时间戳
          sed -i "s/最新更新时间：.*/最新更新时间：$CURRENT_TIME/" README.md

          echo "已更新 README.md 中的时间戳"

      - name: 提交更改
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # 检查是否有更改
          if git diff --quiet; then
            echo "没有检测到更改"
          else
            git add README.md
            git commit -m "自动更新数据库活跃时间: $(date '+%Y-%m-%d %H:%M')"
            git push
            echo "已提交更改到仓库"
          fi